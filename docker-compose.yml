version: '3.8'

services:
  reverse-proxy:
    container_name: spout-reverse-proxy
    restart: unless-stopped
    image: traefik:latest
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --providers.docker=true
      - --providers.file.filename=/etc/traefik/config.yml
    ports:
      - 80:80
      - 8080:8080
    volumes:
      # In order to run HTTPS, you will need to change `http` below to `https`.
      - ./src/frontend/config/traefik.http.yml:/etc/traefik/config.yml:ro
      # See: https://stackoverflow.com/questions/36765138/bind-to-docker-socket-on-windows
      - //var/run/docker.sock:/var/run/docker.sock:ro

  db:
    container_name: spout-postgres
    restart: unless-stopped
    image: postgres:latest
    ports:
      # NOTE: To avoid overlapping with any Postgres database run on the host machine,
      # we bind Postgres to port "15432" instead.
      - 15432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: spout
      POSTGRES_PASSWORD: pgserver
  
  backend:
    container_name: spout-backend
    restart: unless-stopped
    build:
      context: src/backend
      dockerfile: Dockerfile
    ports:
      - 5000:5000
      - 5001:5001
    volumes:
      - ./src/backend:/srv/backend:rw
      - ${APPDATA}\Microsoft\UserSecrets:/root/.microsoft/usersecrets
      - ${APPDATA}\.aspnet\https:/root/.aspnet/https
    labels:
      - traefik.http.routers.backend-http.rule=Host(`spout.localhost`) && PathPrefix(`/api/graphql`)
      - traefik.http.routers.backend-http.service=backend
      - traefik.http.services.backend.loadbalancer.server.port=5000
    depends_on: 
      - db

  frontend:
    container_name: spout-frontend
    restart: unless-stopped
    build:
      context: src/frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes: 
      - ./src/frontend:/srv/frontend:rw
      - /srv/frontend/node_modules
    env_file: 
      - ./src/frontend/.env
    labels:
      - traefik.http.routers.frontend-http.rule=Host(`spout.localhost`)
      - traefik.http.routers.frontend-http.service=frontend
      - traefik.http.services.frontend.loadbalancer.server.port=3000
    depends_on:
      - backend
  
  compiler:
    container_name: spout-gql-compiler
    restart: unless-stopped
    image: node:16
    volumes:
      - ./src/frontend:/srv/compiler:rw
    working_dir: /srv/compiler
    command: yarn codegen:graphql:watch
    depends_on:
      - frontend
    labels: 
      - traefik.enable=false
      
volumes:
  pgdata: {}